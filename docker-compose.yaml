version: '3.9'

services:

# Traefik Reverse Proxy for routing various applications
  reverse-proxy:
    image: traefik:v2.10.5 # The official Traefik docker image
    container_name: traefik
    restart: unless-stopped
    networks:
      - main-proxy-network
    labels:
      - traefik.http.routers.proxy.rule=Host(`proxy.kasmx.dedyn.io`)
      - traefik.http.routers.proxy.service=proxy
      - traefik.http.routers.proxy.entryPoints=websecure
      - traefik.http.services.proxy.loadbalancer.server.port=8080
    environment:
      - "DESEC_TOKEN=${DESEC_TOKEN}"
      - "LEGO_DISABLE_CNAME_SUPPORT=true"
      - "DESEC_TTL=60"
      - "DESEC_POLLING_INTERVAL=5"
      - "DESEC_PROPAGATION_TIMEOUT=300"
    ports:
      - "80:80"
      - "8080"
      - "443:443"
    volumes:
      - ${HOME_LAB_DIR}/traefik:/etc/traefik
      - ${HOME_LAB_DIR}/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events

  # Watchtower upgrades services automatically (optional)
  watchtower:
    restart: unless-stopped
    networks:
      - main-proxy-network
    image: containrrr/watchtower
    container_name: watchtower
    labels:
      - traefik.enabled=false
    environment:
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_POLL_INTERVAL: 7200 # checks for updates every two hours
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  ## portainer dashboard for docker-containers
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    networks:
      - main-proxy-network
    labels:
      - traefik.http.routers.portainer.rule=Host(`docker.kasmx.dedyn.io`)
      - traefik.http.routers.portainer.service=portainer
      - traefik.http.routers.portainer.entryPoints=websecure
      - traefik.http.services.portainer.loadbalancer.server.port=9000
    ports:
      - "9000"
    volumes:
      - ${HOME_LAB_DIR}/stateful-data/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock

  kasm:
    image: lscr.io/linuxserver/kasm:latest
    container_name: kasm
    restart: unless-stopped
    networks:
      - main-proxy-network
    labels:
      # To be kept in use after installation - kasm web labels - used for normal access
      - traefik.http.routers.kasm.rule=Host(`kasmx.dedyn.io`)
      - traefik.http.routers.kasm.entryPoints=websecure
      - traefik.http.routers.kasm.tls=true
      - traefik.http.routers.kasm.service=kasm
      - traefik.http.services.kasm.loadbalancer.server.port=443
      - traefik.http.services.kasm.loadbalancer.serverstransport=ignoreCertTransport@file
      - traefik.http.services.kasm.loadbalancer.server.scheme=https
      # Can be deleted after installation - kasm installer labels - used for installation process
      - traefik.http.routers.kasmins.rule=Host(`installer.kasmx.dedyn.io`)
      - traefik.http.routers.kasmins.entryPoints=websecure
      - traefik.http.routers.kasmins.tls=true
      - traefik.http.routers.kasmins.service=kasmins
      - traefik.http.services.kasmins.loadbalancer.server.port=3000
      - traefik.http.services.kasmins.loadbalancer.server.scheme=https
      - traefik.http.services.kasmins.loadbalancer.serverstransport=ignoreCertTransport@file
    privileged: true
    environment:
      - KASM_PORT=443
      - DOCKER_HUB_USERNAME=${DOCKER_HUB_USERNAME} #optional
      - DOCKER_HUB_PASSWORD=${DOCKER_HUB_PASSWORD} #optional
      - DOCKER_MTU=1500 #optional
    volumes:
      - ${HOME_LAB_DIR}/stateful-data/kasm/data:/opt
      - ${HOME_LAB_DIR}/stateful-data/kasm/profiles:/profiles #optional
      - /dev/input:/dev/input #optional
      - /run/udev/data:/run/udev/data #optional
    ports:
      - "3000"
      - "443"

networks:
  main-proxy-network:
    name: mainProxyNetwork
    driver: bridge
